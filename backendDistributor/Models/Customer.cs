// backendDistributor/Models/Customer.cs
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace backendDistributor.Models
{
    public class Customer
    {
        [Key] // Marks Id as the Primary Key
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)] // Configures Id to be auto-generated by the database
        public int Id { get; set; }

        [Required(ErrorMessage = "Customer Code is required.")]
        [StringLength(50, ErrorMessage = "Customer Code cannot be longer than 50 characters.")]
        public string? Code { get; set; } // Was headerCustomerCode in original React state

        [Required(ErrorMessage = "Customer Name is required.")]
        [StringLength(200, ErrorMessage = "Customer Name cannot be longer than 100 characters.")]
        public string? Name { get; set; } // Was headerName in original React state

        [StringLength(100, ErrorMessage = "Customer Group cannot be longer than 100 characters.")]
        public string? Group { get; set; } // Was headerCustomerGroup

        [Column(TypeName = "decimal(18, 2)")] // Specifies SQL Server data type for currency
        public decimal Balance { get; set; } // Was headerAccountBalance

        [StringLength(100)]
        public string? Route { get; set; } // Was headerRoute

        [StringLength(100)]
        public string? Employee { get; set; } // Was headerSales (Sales Employee)

        [StringLength(500, ErrorMessage = "Remarks cannot be longer than 500 characters.")]
        public string? Remarks { get; set; } // Was headerRemarks

        [StringLength(10, MinimumLength = 10, ErrorMessage = "Contact Number must be 10 characters long.")]
        public string? ContactNumber { get; set; }

        [StringLength(100)]
        [RegularExpression(@"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$", ErrorMessage = "Invalid Email Address format. It must include a domain (e.g., example.com).")]
        public string? MailId { get; set; }

        [StringLength(50)]
        public string? ShippingType { get; set; } // e.g., "Own Vehicle", "Cargo"

        // Address Fields
        [StringLength(100, ErrorMessage = "Address1 cannot be longer than 100 characters.")]
        public string? Address1 { get; set; }

        [StringLength(100, ErrorMessage = "Address2 cannot be longer than 100 characters.")]
        public string? Address2 { get; set; }

        [StringLength(100, ErrorMessage = "Street cannot be longer than 100 characters.")]
        public string? Street { get; set; }

        [StringLength(20, ErrorMessage = "PostBox cannot be longer than 20 characters.")]
        public string? PostBox { get; set; }

        [StringLength(100, ErrorMessage = "City cannot be longer than 100 characters.")]
        public string? City { get; set; }

        [StringLength(100, ErrorMessage = "State cannot be longer than 100 characters.")]
        public string? State { get; set; }

        [StringLength(100, ErrorMessage = "Country cannot be longer than 100 characters.")]
        public string? Country { get; set; }

        
        [StringLength(15, MinimumLength = 15, ErrorMessage = "GSTIN must be exactly 15 characters long.")]
        public string? Gstin { get; set; }
    }
}